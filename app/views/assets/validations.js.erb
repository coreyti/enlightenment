<% if validations %>
(function($) {
  var original;

  $(function() {
    original = rulemap(<%= validations.html_safe %>);

    $.each(original, function(name, rules) {
      $(['form', name, 'validate'].join('.')).validate(rules.real);
    });
  });

  function elements(selector, context) {
    return context
      .find('input, select, textarea')
      .not(':submit, :reset, :image, [disabled]')
      .filter(selector);
  }

  function rulemap(config) {
    var context;
    var converted  = {};
    var resources  = config.resources;
    var nestedWrap = 'div.form-inputs';

    function map(ruleSet, context, mapping) {
      // only map for existing content (avoids infinite loop)
      if(context.length) {
        $.each(ruleSet, function(attribute, rules, nested, associated) {
          if(rules.associated) {
            nested     = $([nestedWrap, attribute].join('.'), context);
            associated = resources[rules.associated];

            if(associated) {
              map((associated.rules || associated.base.rules), nested, mapping);
            }
          }
          else {
            $(elements('.' + attribute, context)).each(function() {
              if( ! mapping.rules[this.name]) {
                mapping.rules[this.name] = rules;
              }
            });
          }
        });
      }
    }

    // top-level/ready setup
    if(resources) {
      $.each(resources, function(name, config) {
        var context = $(['form', name, 'validate'].join('.'));
        var mapping = converted[name] = {
          base : $.extend(true, {}, config),
          real : $.extend(true, {}, defaults)
        };

        map(config.rules, context, mapping.real);
      });
    }
    // contextual additions
    else {
      resources = original;
      context   = $(config);

      $.each(original, function(type, config) {
        if(context.hasClass(type)) {
          map(config.base.rules, context, config.real);
          context
            .removeData('validator')
            .validate(config.real);
        }
      });
    }

    return converted;
  }

  $(document).on('revalidate', 'form', function(e) {
    rulemap(this);
  });

  var defaults = {
    // errorElement : 'span',
    rules : {}
  };
})(jQuery);
<% end %>
